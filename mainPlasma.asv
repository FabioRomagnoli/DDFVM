clear all;

addpath utils
addpath init 
addpath src

% Hyper parameters Plasma
Param = struct();
Param.lr = 51;
Param.K = 100;                  % Time grid points
Param.dt = 1e-4;                % Time separation  [s]
Param.T = 0.1;
% Param.V0 = 0;                 % Voltage at r=1 and t=1  [V]
% Param.VT = 0;                 % Ending voltage at r=1 and t=K*dt  [V]
Param.N = 1e7;                  % density constant [m-3]
Param.tolError = 1e-3;
Param.alpha = 11396.798;  
Param.beta = 342439.622;

Param.stepBuffer = 0.75;  % lower to reduce swinging in dt
Param.scalingPower = 0.27; % lower to reduce swinging in dt  
Param.dtMin = 1e-15;
Param.dtMax = 1e-4;

Param.Nverbose = 0;

% Simulation settings
Flag.model = "plasma";

Flag.method = "fsolve";         % "fsolve"/"newton"
Flag.adaptive = true;        
Flag.CheckGradients = false;

Flag.genterm = 'non-const';         % non-const/const;
Flag.compAlpha = true;
Flag.alpha = "exp";         % "const"/"exp"
Flag.VT = "linear";             % "linear"/"piecewise"

Flag.loadSol = "FirstGoodResult";            % "no"/"SaveName"
Flag.saveSol = "temp";            % "no"/"SaveName"

% Fsolve options
Opt.Display = "off";                    % "off"/"iter"/"final"/"final-detailed"
Opt.SpecifyObjectiveGradient = false; 
Opt.FiniteDifferenceType = "forward";   % "central"/"forward"
% Opt.Algorithm = "levenberg-marquardt";     %"levenberg-marquardt

Opt.MaxIterations = 400;
Opt.MaxFunctionEvaluations = 40e4;
Opt.OptimalityTolerance = 1e-6;
Opt.StepTolerance = 1e-6;
Opt.FunctionTolerance = 1e-6;



% Takes care of Parameters, Intial condition, and adimensionalization
[Param, Dati, ADati] = initPlasma(Param, Flag);

%% Solve
tic;
Results.ASol = solve(ADati, Flag, Opt);
Results.elapsedTime = toc;

%% Postprocessing
Results = postProcess(Dati, ADati, Results, Flag);

%% Plot
% Plotting Flags

Flag.concentrationPlot = "none";    % "all"/"last"/"none"
Flag.potentialPlot = "none";
Flag.currentPlot = "all";

Flag.generationPlot = "none";

plotter(Results,Dati,Flag);

